<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="es.noletia.clientes.dao.ClienteDAO">
    
    <resultMap type="cliente" id="result">
        <id property="idcliente" column="idcliente"/>
        <result property="empresa" column="empresa"/>
        <result property="datosfiscales" column="datosfiscales"/>
        <result property="contactado" column="contactado"/>
        <result property="fechault" column="fechault"/>
        <result property="observaciones" column="observaciones"/>
        <association property="provincia" column="clienteprovincia" javaType="provincia">
            <id property="idprovincia" column="idprovincia"/>
            <result property="nombre" column="nombre"/>
        </association>
        <collection property="listacontactos" ofType="contacto" column="idcontacto">
            <id property="idcontacto" column="idcontacto"/>
            <result property="contacto" column="contacto"/>
            <result property="departamento" column="departamento"/>
            <result property="email" column="email"/>
            <result property="telefono" column="telefono"/>
        </collection>
        <collection property="listacategorias" ofType="categoria">
            <id property="idcategoria" column="idcategoria"/>
            <result property="nombrecategoria" column="nombrecategoria"/>
        </collection>
    </resultMap>
    
    <sql id="camposcliente">
        cli.idcliente, cli.empresa, cli.datosfiscales, cli.contactado, cli.fechault, 
        cli.observaciones, cli.idprovincia as clienteprovincia 
    </sql>
    
    <sql id="camposprovincia">
        pro.idprovincia, pro.nombre
    </sql>
    
    <sql id="camposcontacto">
        con.idcontacto, con.contacto, con.departamento, con.email, con.telefono, 
        con.idcliente
    </sql>
    
    <sql id="camposcategoria">
        cat.idcategoria, cat.nombrecategoria
    </sql>
    
    <sql id="todoscampos">
        <include refid="camposcliente"/>,
        <include refid="camposprovincia"/>,
        <include refid="camposcontacto"/>,
        <include refid="camposcategoria"/>
    </sql>
    
    <sql id="from">
        cliente cli
    </sql>
    
    <sql id="leftjoins">
        left join provincia pro on cli.idprovincia=pro.idprovincia
        left join contacto con on cli.idcliente=con.idcliente
        left join cliente_has_categorias chc on cli.idcliente=chc.cliente_idcliente 
        left join categorias cat on cat.idcategoria=chc.categorias_idcategoria
    </sql>
    
    <sql id="fromcompleto">
        <include refid="from"/>
        <include refid="leftjoins"/>
    </sql>
    
    <insert id="alta" parameterType="cliente" useGeneratedKeys="true" keyProperty="idcliente">
        insert into cliente(empresa,datosfiscales,contactado,fechault,observaciones,idprovincia) 
        values (#{empresa},#{datosfiscales},#{contactado},#{fechault},#{observaciones},#{provincia.idprovincia})
    </insert>
    
    <delete id="borra" parameterType="cliente">
        delete from cliente where idcliente=#{idcliente}
    </delete>
    
    <delete id="borraPorId" parameterType="java.lang.Long">
        delete from cliente where idcliente=#{id}
    </delete>
    
    <select id="getElemento" parameterType="cliente" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="fromcompleto"/> 
		<where>
		    <if test="idcliente != null">AND cli.idcliente=#{idcliente}</if>
		    <if test="empresa != null">AND empresa=#{empresa}</if>
		</where>
    </select>
    
    <select id="getElementoPorId" parameterType="java.lang.Long" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="fromcompleto"/> 
        where cli.idcliente=#{id}
    </select>
    
    <select id="getListaElementos" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="fromcompleto"/> 
        order by empresa
    </select>
    
    <update id="actualiza" parameterType="cliente">
        update cliente
        <set>
            empresa = #{empresa},
            datosfiscales = #{datosfiscales},
            contactado = #{contactado},
            fechault = #{fechault},
            observaciones = #{observaciones},
            idprovincia = #{provincia.idprovincia},
        </set>
        where idcliente = #{idcliente}
    </update>
    
    <select id="getElementosFiltrados" resultMap="result" parameterType="java.util.Map">
        select <include refid="todoscampos"/> 
        from <include refid="fromcompleto"/> 
        <where> 
	        <if test="empresa != '' or contacto != '' or email != ''">
	            (
	        	<if test="empresa != null and empresa != ''">
	        	UPPER(cli.empresa) like UPPER('%${empresa}%')
	        	</if>
	        	<if test="empresa != null and empresa != '' and contacto != null and contacto != ''"> 
	        	    or 
	        	</if>
	        	<if test="contacto != null and contacto != ''">
	        	UPPER(con.contacto) like UPPER('%${contacto}%')
	        	</if>
	        	<if test="email != null and email != ''">
		        	UPPER(con.email) like UPPER('%${email}%')
	        	</if>
	        	) 
	        </if>
	        <if test="categorias.size() > 0">
	        and cat.idcategoria in
	        	<foreach collection="categorias" item="cat" open="(" separator="," close=")">
	        	#{cat.idcategoria}
	        	</foreach>
	        </if>
        </where>
        order by empresa
    </select>
    
</mapper>