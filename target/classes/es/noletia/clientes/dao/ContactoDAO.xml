<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="es.noletia.clientes.dao.ContactoDAO">
    
    <resultMap type="contacto" id="result">
        <id property="idcontacto" column="idcontacto"/>
        <result property="contacto" column="contacto"/>
        <result property="departamento" column="departamento"/>
        <result property="email" column="email"/>
        <result property="telefono" column="telefono"/>
        <association property="cliente" column="idcliente" javaType="cliente">
            <id property="idcliente" column="idcliente"/>
            <result property="empresa" column="empresa"/>
        </association>
    </resultMap>
    
    <sql id="camposcontacto">
        con.idcontacto, con.contacto, con.departamento, 
        con.email, con.telefono, con.idcliente,
    </sql>
    
    <sql id="camposcliente">
        cli.idcliente, cli.empresa
    </sql>
    
    
    <sql id="todoscampos">
        <include refid="camposcontacto"/>
        <include refid="camposcliente"/>
    </sql>
    
    <sql id="from">
        contacto con, cliente cli 
    </sql>
    
    <sql id="join">
        cli.idcliente=con.idcliente
    </sql>
        
    <insert id="alta" parameterType="contacto" useGeneratedKeys="true" keyProperty="idcontacto">
        insert into contacto(contacto,departamento,email,telefono,idcliente) 
        values (#{contacto},#{departamento},#{email},#{telefono},#{cliente.idcliente})
    </insert>
    
    <delete id="borra" parameterType="contacto">
        delete from contacto where idcontacto=#{idcontacto}
    </delete>
    
    <delete id="borraPorId" parameterType="java.lang.Long">
        delete from contacto where idcontacto=#{id}
    </delete>
    
    <delete id="borraContactosPorCliente" parameterType="java.lang.Long">
        delete from contacto where idcliente=#{idcliente}
    </delete>
    
    <select id="getElemento" parameterType="contacto" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="from"/>
        <where>
            <include refid="join"/>
		    <if test="idcontacto != null">AND con.idcontacto=#{idcontacto}</if>
		</where>
    </select>
    
    <select id="getElementoPorId" parameterType="java.lang.Long" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="from"/> 
        <where>
            <include refid="join"/>
            AND con.idcontacto=#{id}
        </where> 
    </select>
    
    <select id="getListaElementos" resultMap="result">
        select <include refid="todoscampos"/> 
        from <include refid="from"/>
        <where>
            <include refid="join"/>
        </where> 
    </select>
    
    <update id="actualiza" parameterType="contacto">
        update contacto
        <set>
            contacto = #{contacto},
            departamento = #{departamento},
            email = #{email},
            telefono = #{telefono},
            idcliente = #{cliente.idcliente},
        </set>
        where idcontacto = #{idcontacto}
    </update>
    
    <select id="getElementosFiltrados" resultMap="result" parameterType="java.util.Map">
        select * 
        from contacto 
        where contacto like '%${contacto}%'
    </select>
    
</mapper>